<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="2000" height="544" fontSize="14">
	<mx:Script>
		<![CDATA[
			import cl.larrainvial.carterasAFP.events.ImportarEvent;
			import cl.larrainvial.carterasAFP.events.ProcesoEvent;
			import cl.larrainvial.carterasAFP.model.ModelLocator;
			
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			
			import mx.controls.Alert;
			import mx.managers.CursorManager;
			import mx.managers.PopUpManager;
			
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			private var uploadURL:URLRequest;
			private var fileRef:FileReference;
			
			
			
			
			
			
			protected function fnBuscarArchivo(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var arr:Array = [];
				arr.push(new FileFilter("Archivos Excel 2003", "*.xlsx"));
				fileRef = new FileReference();
				fileRef.addEventListener(Event.SELECT, fileRef_select);
				//fileRef.addEventListener(Event.COMPLETE, fileRef_complete);
				fileRef.addEventListener(Event.CANCEL, fileRef_close);
				fileRef.addEventListener(Event.CLOSE, fileRef_close);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR, fileRef_error);
				
				fileRef.browse(arr);
				
				
				
			}
			
			public function onComplete(evt:Event):void 
			{ 
				
				fileRef.removeEventListener(Event.SELECT, fileRef_select);
				fileRef.removeEventListener(Event.COMPLETE, onComplete);
				fileRef.removeEventListener(IOErrorEvent.IO_ERROR, fileRef_error);
				var xmlStr: String = "";
				xmlStr += "<ARCHIVO>";
				xmlStr += "<DESCRIPCION_ARCHIVO>";
				xmlStr += "<NOMBRE_ARCHIVO>" + fileRef.name + "</NOMBRE_ARCHIVO>";
				xmlStr += "<USUARIO>" + model.Loggeado + "</USUARIO>";
				xmlStr += "</DESCRIPCION_ARCHIVO>";
				xmlStr += "</ARCHIVO>";
				var evento: ImportarEvent = new ImportarEvent(xmlStr);
				//evento.callback = fnResult;
				evento.dispatch()
		
				
							
							
		 
			} 
			
			
			private function fileRef_select(evt:Event):void 
			{
				var arrValNombre:Array = evt.currentTarget.name.split('.')[0].split('_');
				if(arrValNombre.length == 3){
					
					var resultado:String = '';					
					var reg:RegExp = /20\d{2}(0[1-9]|1[0-2])$/;				
					var val:* = arrValNombre[2].search(reg);
					
					if(arrValNombre[0] == 'Cartera' && arrValNombre[1] == 'Agregada' && val > -1){
						
						fileRef.addEventListener(ProgressEvent.PROGRESS, onProgress); 
						fileRef.addEventListener(Event.COMPLETE, onComplete);			
						txtNomArchivo.text = fileRef.name;
					} else {
						 
						Alert.show("Nombre del archivo no corresponde, debe ser Cartera_Agregada_[aaaamm].xls, donde aaaamm corresponde a año y mes. Ejemplo de nombre de archivo: “Cartera_Agregada_201801.xlsx”.", "Atención");
						return;
					}				
					
				} else {
					Alert.show("Nombre del archivo no corresponde, debe ser Cartera_Agregada_[aaaamm].xls, donde aaaamm corresponde a año y mes. Ejemplo de nombre de archivo: “Cartera_Agregada_201801.xlsx”.", "Atención");
					return;
				}
				
				
				
				
			}
			
			
			public function onProgress(evt:ProgressEvent):void 
			{ 
				trace("Loaded " + evt.bytesLoaded + " of " + evt.bytesTotal + " bytes."); 
			} 
			
			private function importar(): void
			{
				var arr:Array = [];
				arr.push(new FileFilter("Archivos Excel", "*.xlsx"));
				fileRef = new FileReference();
				fileRef.addEventListener(Event.SELECT, fileRef_select);
				//fileRef.addEventListener(Event.COMPLETE, fileRef_complete);
				fileRef.addEventListener(Event.CANCEL, fileRef_close);
				fileRef.addEventListener(Event.CLOSE, fileRef_close);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR, fileRef_error);
				
				fileRef.browse(arr);
			}
			
			private function fileRef_close(evt:Event):void
			{
				CursorManager.removeBusyCursor();
			}
			
			
			
			
			private function fileRef_error(evt: IOErrorEvent):void
			{
				CursorManager.removeBusyCursor();
				fileRef.removeEventListener(Event.SELECT, fileRef_select);
				fileRef.removeEventListener(IOErrorEvent.IO_ERROR, fileRef_error);
				Alert.show("El archivo no pudo ser subido, \nPor favor reintentar", "Error", Alert.OK, null, null);
			}
			
			
			
			protected function fnCargaArchivo(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				var request:URLRequest = new URLRequest(model.rutaUpload); 
				try 
				{ 
					CursorManager.setBusyCursor();
					request.contentType = "multipart/form-data";
					request.method = "POST";
					fileRef.upload(request, fileRef.name, false); 
					
					CursorManager.removeBusyCursor();
					
				} 
				catch (error:Error) 
				{ 
					CursorManager.removeBusyCursor();
					trace("Unable to upload file."); 
				}
				
				
				
				
				
			}
			
			private function fnResult(param:*):void{
				var pop:PopIngreso = new PopIngreso();
				PopUpManager.addPopUp(pop, this.parentApplication as DisplayObject, true);
				PopUpManager.centerPopUp(pop);
			}
			
			protected function fnEjecutarProceso(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var ev:ProcesoEvent = new ProcesoEvent(ProcesoEvent.EVENT_PROCESO);
				ev.callback = fnResult;
				ev.dispatch();
			}
			
		]]>
	</mx:Script>
	<mx:HBox width="100%" horizontalGap="0" horizontalAlign="center">
		<mx:Form width="50%" verticalGap="30">
			<mx:FormItem width="100%" label="Periodo" horizontalAlign="left">
				<mx:ComboBox id="cbPeriodo" y="29" width="165" dataProvider="{model.arrPeriodos}"
							 horizontalCenter="0" labelField="label"></mx:ComboBox>	
			</mx:FormItem>
			<mx:FormItem width="100%" label="Tipo Cartera" horizontalAlign="left">
				<mx:ComboBox id="cbTipoCartera" y="69" width="165"
							 dataProvider="{model.arrTipoCartera}" horizontalCenter="0"></mx:ComboBox>
			</mx:FormItem>
			<mx:FormItem width="100%" label="País" horizontalAlign="left">
				<mx:ComboBox id="cbPais" y="29" width="165" dataProvider="{model.arrPais}"
							 horizontalCenter="0" labelField="label"></mx:ComboBox>	
			</mx:FormItem>
			<mx:FormItem width="100%" label="Archivo" horizontalAlign="left">
				<mx:HBox>
					<mx:TextInput id="txtNomArchivo" width="165" click="fnBuscarArchivo(event)"
								  editable="false" horizontalCenter="0"/>
					<mx:Button width="125" label="Examinar" click="fnBuscarArchivo(event)"/>
					<mx:Button width="125" label="Cargar Archivo" click="fnCargaArchivo(event)"/>
				</mx:HBox>
				
			</mx:FormItem>
			<mx:FormItem width="100%" horizontalAlign="left">
				<mx:Button width="165" height="40" label="Ejecutar Proceso" horizontalCenter="0" click="fnEjecutarProceso(event)"/>	
			</mx:FormItem>
			
		</mx:Form>
		
			
	</mx:HBox>
	
	
	
	
	
	
	
</mx:Canvas>
