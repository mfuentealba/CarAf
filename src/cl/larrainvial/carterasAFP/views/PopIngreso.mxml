<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="80%" height="60%" title="Resumen importación" showCloseButton="true" close="fnCerrar(event)">
	
	<mx:Script>
		<![CDATA[
			import cl.larrainvial.carterasAFP.components.RenderProcesoDistribuidor;
			import cl.larrainvial.carterasAFP.components.RenderProcesoManager;
			import cl.larrainvial.carterasAFP.components.RenderProcesoNemo;
			import cl.larrainvial.carterasAFP.components.RenderProcesoRegion;
			import cl.larrainvial.carterasAFP.components.RenderProcesoSubregion;
			import cl.larrainvial.carterasAFP.events.ProcesoEvent;
			import cl.larrainvial.carterasAFP.model.ModelLocator;
			import cl.larrainvial.carterasAFP.vo.DistribuidorVO;
			import cl.larrainvial.carterasAFP.vo.InstrumentoVO;
			import cl.larrainvial.carterasAFP.vo.ManagerVO;
			import cl.larrainvial.carterasAFP.vo.ProcesoVO;
			import cl.larrainvial.carterasAFP.vo.RegionVO;
			import cl.larrainvial.carterasAFP.vo.SubregionVO;
			
			import mx.controls.Alert;
			import mx.controls.LinkButton;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			[Bindable] private var model:ModelLocator = ModelLocator.getInstance();
			
			private var instrumento:InstrumentoVO;
			private var manager:ManagerVO;
			private var distribuidor:DistribuidorVO;
			private var region:RegionVO;
			private var subregion:SubregionVO;
			
			
			protected function fnConfirmar(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				var ev:ProcesoEvent = new ProcesoEvent(ProcesoEvent.EVENT_GUARDAR_PROCESO);
				
				
				var str:String = '<WSParam><Parametros><XmlIn><Root>';
				
				
				
				
				for each(var obj:ProcesoVO in model.arrProceso){
					str += '<Dato anio="' + obj.anio + '" periodo="' + obj.periodo  + '" id_instrumento="' + obj.id_instrumento + '" id_distribuidor="' + obj.id_distribuidor 
						+ '" id_manager="' + obj.id_manager + '" id_region="' + obj.id_region + '" id_subregion="' + obj.id_subregion + '" fondoA="' + obj.fondoA 
						+ '" fondoB="' + obj.fondoB + '" fondoC="' + obj.fondoC + '" fondoD="' + obj.fondoD + '" fondoE="' + obj.fondoE + '" total="' + obj.total
						+ '" precio_actual="' + obj.precio_actual + '" precio_anterior="' + obj.precio_anterior + '" nro_cuotas="' + obj.nro_cuotas + '" diferencia_precio="' + obj.diferencia_precio + '"/>';
					
					if(!obj.distribuidor || !obj.instrumento || !obj.manager || !obj.instrumento || !obj.region || !obj.subregion){
						Alert.show("Debe ingresar datos para todas las líneas", "Atención");
						return;
					}
				}
				
				
				
				
				
				str += '</Root></XmlIn></Parametros></WSParam>';
				
				ev.xmlparam = str; 
				ev.callback = fnResult;
				ev.dispatch();
			}
			
			private function fnResult(data:*):void{
				if(data == 'Ingreso Exitoso'){
					PopUpManager.removePopUp(this);	
				}
				
			}
			
			private function fnCompletar(obj:*, campo:String):void{
				dg.selectedItem[campo] = obj.id;
				model.arrProceso.setItemAt(dg.selectedItem, model.arrProceso.getItemIndex(dg.selectedItem));
			}
			
			protected function fnMantenedor(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				if(event.itemRenderer is RenderProcesoNemo){
					var pop:PopMantenedor = new PopMantenedor();
					pop.callback = fnCompletar;
					var mant:* = new FormInstrumento();
					var exis:* = new MantenedorInstrumentosView();
					exis.ver = false;
					exis.fn = pop.fnCompletar;
					pop.formulario = mant; 
					mant.fnBuscar = pop.fnCompletar;
					instrumento = new InstrumentoVO();
					pop.objRelacionado = instrumento; 
					pop.arr.push(mant);
					pop.arr.push(exis);
					//mant.bottom = 10;
					PopUpManager.addPopUp(pop, this.parentApplication as DisplayObject, true);
					PopUpManager.centerPopUp(pop);
					var arr:Array = dg.selectedItem.nemo.split(' (');
					arr = arr[0].split('/');
					mant.txtISIN.text = arr[0] == 'SIN ISIN' ? '' : arr[0];
					mant.txtTicker.text = arr[1] == 'SIN TICKER' ? '' : arr[1];
					
				} else if(event.itemRenderer is RenderProcesoManager){
										
					pop = new PopMantenedor();
					pop.callback = fnCompletar;
					mant = new FormManager();
					exis = new MantenedorManagerView();
					exis.ver = false;
					exis.fn = pop.fnCompletar;
					pop.formulario = mant; 
					mant.fnBuscar = pop.fnCompletar;
					instrumento = new InstrumentoVO();
					pop.objRelacionado = instrumento; 
					pop.arr.push(mant);
					pop.arr.push(exis);
					//mant.bottom = 10;
					PopUpManager.addPopUp(pop, this.parentApplication as DisplayObject, true);
					PopUpManager.centerPopUp(pop);
					
					
				} else if(event.itemRenderer is RenderProcesoDistribuidor){
					
					pop = new PopMantenedor();
					pop.callback = fnCompletar;
					mant = new FormDistribuidor();
					exis = new MantenedorDistribuidoresView();
					exis.ver = false;
					exis.fn = pop.fnCompletar;
					pop.formulario = mant; 
					mant.fnBuscar = pop.fnCompletar;
					//instrumento = new InstrumentoVO();
					//pop.objRelacionado = instrumento; 
					pop.arr.push(mant);
					pop.arr.push(exis);
					//mant.bottom = 10;
					PopUpManager.addPopUp(pop, this.parentApplication as DisplayObject, true);
					PopUpManager.centerPopUp(pop);
					
					
				} else if(event.itemRenderer is RenderProcesoRegion){
					
					
					pop = new PopMantenedor();
					pop.callback = fnCompletar;
					mant = new FormRegion();
					exis = new MantenedorRegionView();
					exis.ver = false;
					exis.fn = pop.fnCompletar;
					pop.formulario = mant; 
					mant.fnBuscar = pop.fnCompletar;
					//instrumento = new InstrumentoVO();
					//pop.objRelacionado = instrumento; 
					pop.arr.push(mant);
					pop.arr.push(exis);
					//mant.bottom = 10;
					PopUpManager.addPopUp(pop, this.parentApplication as DisplayObject, true);
					PopUpManager.centerPopUp(pop);
					
					
				} else if(event.itemRenderer is RenderProcesoSubregion){
					
					
					pop = new PopMantenedor();
					pop.callback = fnCompletar;
					mant = new FormSubregion();
					exis = new MantenedorSubregionView();
					exis.ver = false;
					exis.fn = pop.fnCompletar;
					pop.formulario = mant; 
					mant.fnBuscar = pop.fnCompletar;
					//instrumento = new InstrumentoVO();
					//pop.objRelacionado = instrumento; 
					pop.arr.push(mant);
					pop.arr.push(exis);
					//mant.bottom = 10;
					PopUpManager.addPopUp(pop, this.parentApplication as DisplayObject, true);
					PopUpManager.centerPopUp(pop);
					
					
				}
			}
			
			
			
			protected function fnCerrar(event:CloseEvent):void
			{
				// TODO Auto-generated method stub
				PopUpManager.removePopUp(this);
			}
			
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
		<mx:DataGrid id="dg" width="100%" height="100%" fontSize="15" dataProvider="{model.arrProceso}" itemClick="fnMantenedor(event)">
			<mx:columns>
				<mx:DataGridColumn dataField="nemo" headerText="Nemotécnico" itemRenderer="cl.larrainvial.carterasAFP.components.RenderProcesoNemo" width="300"/>
				<mx:DataGridColumn dataField="instrumento.tipo" headerText="Tipo" width="100"/>
				<mx:DataGridColumn dataField="distribuidor.distribuidor" headerText="Distribuidor" itemRenderer="cl.larrainvial.carterasAFP.components.RenderProcesoDistribuidor" width="100"/>
				<mx:DataGridColumn dataField="manager.distribuidor" headerText="Manager" itemRenderer="cl.larrainvial.carterasAFP.components.RenderProcesoManager" width="100"/>
				<mx:DataGridColumn dataField="instrumento.mercado" headerText="Mercado" width="100"/>
				<mx:DataGridColumn dataField="instrumento.estilo" headerText="Estilo" width="100"/>
				<mx:DataGridColumn dataField="instrumento.capitalizacion" headerText="Capitalización" width="100"/>
				<mx:DataGridColumn dataField="instrumento.gestion" headerText="Gestión" width="100"/>
				<mx:DataGridColumn dataField="region.nombre" headerText="Región" itemRenderer="cl.larrainvial.carterasAFP.components.RenderProcesoRegion" width="100"/>
				<mx:DataGridColumn dataField="subregion.nombre" headerText="Subregión" itemRenderer="cl.larrainvial.carterasAFP.components.RenderProcesoSubregion" width="100"/>
				<mx:DataGridColumn dataField="fondoA" headerText="Fondo A" width="50"/>
				<mx:DataGridColumn dataField="fondoB" headerText="Fondo B" width="50"/>
				<mx:DataGridColumn dataField="fondoC" headerText="Fondo C" width="50"/>
				<mx:DataGridColumn dataField="fondoD" headerText="Fondo D" width="50"/>
				<mx:DataGridColumn dataField="fondoE" headerText="Fondo E" width="50"/>
				
				
				<mx:DataGridColumn dataField="anio" headerText="Año" width="50"/>
				
				<mx:DataGridColumn dataField="precio_actual" headerText="Precio Actual" width="50"/>
				<mx:DataGridColumn dataField="precio_anterior" headerText="Precio Pasado" width="50"/>
				<mx:DataGridColumn dataField="nro_cuotas" headerText="Cuotas" width="50"/>
				<mx:DataGridColumn dataField="diferencia_precio" headerText="Dif. Precios" width="50"/>	
			</mx:columns>
			
		</mx:DataGrid>	
		<mx:HBox horizontalAlign="center" width="100%">
			<mx:Button label="Guardar" click="fnConfirmar(event)"/>
			<!--<mx:Button label="Reprocesar" click="fnActualizar(event)"/>-->
		</mx:HBox>
	</mx:VBox>
	
</mx:TitleWindow>
